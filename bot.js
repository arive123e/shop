require('dotenv').config();

const TelegramBot = require('node-telegram-bot-api');
const puppeteer = require('puppeteer');

const token = process.env.TELEGRAM_BOT_TOKEN;
if (!token) {
  console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É–∫–∞–∑–∞–Ω –≤ .env');
  process.exit(1);
}

const bot = new TelegramBot(token, { polling: true });

// –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ü–µ–Ω—ã –∏–∑ —é–∞–Ω–µ–π –≤ —Ç–µ–Ω–≥–µ
const yuanToKZT = (yuan) => {
  const rate = 70; // 1 —é–∞–Ω—å = 70 —Ç–µ–Ω–≥–µ (–ø—Ä–∏–º–µ—Ä)
  return (parseFloat(yuan.replace(/[^\d.,]/g, '').replace(',', '.')) * rate).toFixed(0);
};

// –ü–∞—Ä—Å–µ—Ä 1688 (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π, –¥–ª—è —Ç–µ—Å—Ç–∞)
async function parse1688(url) {
  const browser = await puppeteer.launch({
    args: ['--no-sandbox', '--disable-setuid-sandbox'],
  });
  const page = await browser.newPage();

  try {
    await page.goto(url, { waitUntil: 'networkidle2' });
    await page.waitForTimeout(3000); // –¥–∞—ë–º —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–æ–≥—Ä—É–∑–∏—Ç—å—Å—è

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const data = await page.evaluate(() => {
      // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
      const titleEl = document.querySelector('h1.d-title');
      const title = titleEl ? titleEl.innerText.trim() : null;

      // –¶–µ–Ω–∞ (–∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ span.price)
      let price = null;
      const priceEl = document.querySelector('span.price');
      if (priceEl) {
        price = priceEl.innerText.trim();
      } else {
        // –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ ‚Äî –ø–µ—Ä–≤–∞—è —Ü–µ–Ω–∞ –≤ offer-price –∏–ª–∏ –¥—Ä—É–≥–æ–π –±–ª–æ–∫
        const offerPriceEl = document.querySelector('.price-original-sku');
        if (offerPriceEl) price = offerPriceEl.innerText.trim();
      }

      // –ö–∞—Ä—Ç–∏–Ω–∫–∏ (—Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏)
      const images = [];
      const imgEls = document.querySelectorAll('.tab-trigger-content img');
      imgEls.forEach(img => {
        let src = img.getAttribute('src') || img.getAttribute('data-src');
        if (src) {
          if (src.startsWith('//')) src = 'https:' + src;
          else if (!src.startsWith('http')) src = 'https://' + src;
          images.push(src);
        }
      });

      return { title, price, images };
    });

    await browser.close();

    return data;
  } catch (error) {
    await browser.close();
    throw error;
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;

  if (msg.text && msg.text.includes('1688.com')) {
    bot.sendMessage(chatId, 'üîé –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ —Å 1688... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.');

    try {
      const data = await parse1688(msg.text);

      if (!data.title) {
        bot.sendMessage(chatId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å 1688. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.');
        return;
      }

      const priceKZT = data.price ? yuanToKZT(data.price) : '‚Äî';

      let response = `üì¶ *${data.title}*\nüí∞ –¶–µ–Ω–∞: ${priceKZT} ‚Ç∏ (–ø—Ä–∏–º–µ—Ä–Ω–æ)\n\n`;

      if (data.images.length) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–Ω–∞—á–∞–ª–∞ —Ç–µ–∫—Å—Ç
        await bot.sendMessage(chatId, response, { parse_mode: 'Markdown' });

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≥—Ä—É–ø–ø–æ–π (–ø–æ 5)
        for (let i = 0; i < data.images.length; i += 5) {
          const media = data.images.slice(i, i + 5).map(url => ({ type: 'photo', media: url }));
          await bot.sendMediaGroup(chatId, media);
        }
      } else {
        // –ù–µ—Ç –∫–∞—Ä—Ç–∏–Ω–æ–∫ ‚Äî –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        bot.sendMessage(chatId, response, { parse_mode: 'Markdown' });
      }

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ 1688:', error);
      bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  } else {
    bot.sendMessage(chatId, 'üëã –ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å 1688.com, –∏ —è –ø–æ–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏.');
  }
});
